<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 接口全限定名要与映射文件的namespace保持一致 -->
<mapper namespace="com.hr.mapper.EmpSQLMapper">

	<cache type="org.mybatis.caches.ehcache.EhcacheCache"/>
	
	<!-- <sql id=""></sql>:设置一段SQL片段，即公共SQL，可以被当前映射文件中所有的SQL语句所访问 用法：<include 
		refid="empColumns"></include>:访问某个SQL片段 -->
	<sql id="empColumns">select eid,ename,age,sex,did from emp</sql>

	<!-- <if test=""></if>：通过test表达式，拼接sql <where>:添加where关键字，同时去掉多余的and <trim 
		prefix="" suffix="" prefixOverrides="" suffixOverrides="">: trim截取并拼接 prefix:在操作的SQL语句前加入某些内容 
		suffix:在操作的SQL语句后加入某些内容 prefixOverrides:把操作的SQL语句前的某些内容去掉 suffixOverrides:把操作的SQL语句后的某些内容去掉 -->

	<!-- List<Emp> getEmpListByMoreTJ(Emp emp); 多条件查询：若页面中没有设置此条件，SQL语句中一定不能有该条件 -->
	<select id="getEmpListByMoreTJ" resultType="Emp">
		<!-- select eid,ename,sex,age,did from emp -->
		<include refid="empColumns"></include>
		<!-- 1=1恒成立的条件，防止某一个条件没有输入，SQL语句报错的问题(where and) -->
		<!-- where 1 = 1 -->
		<trim prefix="where" suffix="" prefixOverrides=""
			suffixOverrides="and|or"><!-- and|or将SQL语句最后的and或者or去掉 -->
			<if test="eid != null">
				eid = #{eid} and
			</if>
			<if test="ename != null and ename != ''">
				ename = #{ename} and
			</if>
			<if test="age != null">
				age = #{age} and
			</if>
			<!-- ==判断的时候，必须是数值，不能是字符串 -->
			<if test="sex == 1 or sex== 0">
				sex = #{sex}
			</if>
		</trim>
	</select>

	<select id="getEmpListByMoreTJ1" resultType="Emp">
		select eid,ename,sex,age,did from emp
		<!-- 1=1恒成立的条件，防止某一个条件没有输入，SQL语句报错的问题(where and) -->
		<!-- where 1 = 1 -->
		<where>
			<if test="eid != null">
				and eid = #{eid}
			</if>
			<if test="ename != null and ename != ''">
				and ename = #{ename}
			</if>
			<if test="age != null">
				and age = #{age}
			</if>
			<!-- ==判断的时候，必须是数值，不能是字符串 -->
			<if test="sex == 1 or sex== 0">
				and sex = #{sex}
			</if>
		</where>
	</select>

	<!-- <choose>:选择某一个when或otherwise执行 <when test=""></when>:通过test表达式拼接SQL 
		. . <otherwise></otherwise>：当when都不符合条件，就会选择otherwise拼接sql </choose> -->
	<!-- List<Emp> getEmpListByChoose(Emp emp); -->
	<select id="getEmpListByChoose" resultType="Emp">
		select eid,ename,age,sex from emp
		where
		<choose>
			<when test="eid != null">
				eid = #{eid}
			</when>
			<when test="ename != null and ename != ''">
				ename = #{ename}
			</when>
			<when test="age != null">
				age = #{age}
			</when>
			<otherwise>
				sex = #{sex}
			</otherwise>
		</choose>
	</select>

	<!-- void insertEmp(Emp emp); -->
	<insert id="insertEmp">
		insert into emp(eid,ename,age,sex) values(
		null,
		#{ename},
		#{age},
		<choose>
			<when test="sex == 0">'女'</when>
			<when test="sex == 1">'男'</when>
			<otherwise>'不详'</otherwise>
		</choose>
		)
	</insert>

	<!-- 批量删除方式一 -->
	<!-- void deleteMoreEmp(String eids); -->
	<delete id="deleteMoreEmp">
		delete from emp where eid in (${value})
	</delete>

	<!-- 批量删除方式二 -->
	<!-- <foreach collection="" item="" close="" open="" separator="" index=""></foreach>:对一个数组或集合进行遍历 
		collection:指定要遍历的集合或数组 item：设置别名 close:设置循环体的结束内容 open:设置循环体的开始内容 separator:设置每一次循环之间的分隔符 
		index:若遍历的是list集合，index代表下标；若遍历的是map，index代表的是键 -->
	<!-- void deleteMoreByList(List<Integer> eids); -->
	<delete id="deleteMoreByList">
		<!-- 方式一 -->
		delete from emp where eid in
		<!-- 当传输参数为List或Array，mybatis会将List或Array放在map中， List以list为键,所以collection="list" -->
		<!-- <foreach collection="list" item="eid" separator="," open="(" close=")"> 
			#{eid} </foreach> -->

		<!-- 设置@Param("eids")，collection="eids -->
		<foreach collection="eids" item="eid" separator="," open="("
			close=")">
			#{eid}
		</foreach>

		<!-- 方式二 -->
		<!-- delete from emp where <foreach collection="list" item="eid" separator="or"> 
			eid = #{eid} </foreach> -->
	</delete>

	<!-- void insertMoreArray(Emp[] emps); -->
	<insert id="insertMoreArray">
		insert into emp values
		<foreach collection="emps" item="emp" separator=",">
			(null,#{emp.ename},#{emp.age},#{emp.sex},1)
		</foreach>
	</insert>

	<!-- Emp getEmpByEid(String eid); -->
	<select id="getEmpByEid" resultType="Emp" >
		<include refid="empColumns"></include>
		where eid = #{eid}
	</select>



</mapper>